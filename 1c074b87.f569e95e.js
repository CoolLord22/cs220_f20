(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{67:function(e,t,s){"use strict";s.r(t),s.d(t,"frontMatter",(function(){return o})),s.d(t,"metadata",(function(){return r})),s.d(t,"rightToc",(function(){return c})),s.d(t,"default",(function(){return d}));var a=s(2),n=s(6),i=(s(0),s(116)),o={id:"topics",title:"Course Topics",sidebar_label:"Course Topics"},r={unversionedId:"syllabus/topics",id:"syllabus/topics",isDocsHomePage:!1,title:"Course Topics",description:"* General skills: code reading, tracing, and writing; pair programming and collaborative development; problem analysis and decomposition; incremental design; modular design; automatic testing",source:"@site/docs\\syllabus\\topics.md",permalink:"/cs220_f20/docs/syllabus/topics",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/syllabus/topics.md",sidebar_label:"Course Topics",sidebar:"docs",previous:{title:"Course Goals and Objectives",permalink:"/cs220_f20/docs/syllabus/objectives"},next:{title:"Course Philosophy",permalink:"/cs220_f20/docs/syllabus/philosophy"}},c=[],l={rightToc:c};function d(e){var t=e.components,s=Object(n.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},l,s,{components:t,mdxType:"MDXLayout"}),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"General skills:")," code reading, tracing, and writing; pair programming and collaborative development; problem analysis and decomposition; incremental design; modular design; automatic testing"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"Unix-like systems and tools:")," Unix basics, shell basics (command line tools, I/O redirection, etc.), shellscript and automation, text editors, gcc, make, gdb, valgrind, version control (git)"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"C language, syntax, semantics, and concepts:")," types, operators, control structures, standard (terminal) I/O, scope, arrays, strings, pointers, dynamic memory allocation, structs, file I/O"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"C++ language, syntax, semantics, and concepts:")," Standard Template Library (STL), containers (vs arrays), classes, templates, memory management, operator overloading, inheritance and polymorphism, object oriented design, exception handling")))}d.isMDXComponent=!0}}]);